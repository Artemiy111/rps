generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Card {
  rock
  paper
  scissors
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  name     String @unique
  password String

  token          UserToken?
  games          Game[]
  roundsWhereWon GameRound[]

  @@map("users")
}

model UserToken {
  id      String @id @default(uuid()) @db.Uuid
  refresh String @unique

  userId String @unique @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  @@map("users_token")
}

model Game {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  startedAt DateTime? @map("started_at")
  endedAt   DateTime? @map("ended_at")

  players User[]
  rounds  GameRound[]

  @@map("games")
}

model GameRound {
  id     String @id @default(uuid()) @db.Uuid
  gameId String @db.Uuid
  game   Game   @relation(fields: [gameId], references: [id])
  order  Int    @default(1)

  winnerId   String?           @db.Uuid
  winner     User?             @relation(fields: [winnerId], references: [id])
  winnerCard Card?
  players    GameRoundPlayer[]

  @@unique([gameId, order])
  @@map("game_rounds")
}

model GameRoundPlayer {
  id          String    @id @default(uuid()) @db.Uuid
  userId      String    @db.Uuid
  card        Card
  gameRound   GameRound @relation(fields: [gameRoundId], references: [id])
  gameRoundId String    @db.Uuid

  @@unique([gameRoundId, userId])
  @@map("game_round_players")
}
